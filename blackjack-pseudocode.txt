blackjack-pseudocode

2 to 10 face value
jack, queen and king 10
ace can either be 1 or 11

There will be only two players. One human and one computer (for the Base solution).
- The computer will always be the dealer.
- Each player gets dealt two cards to start.
- The player goes first, and decides if they want to hit (draw a card) or stand (end their turn).
- The dealer has to hit if their hand is below 17.
- Each players' score is the total of their card ranks. Jacks/Queen/Kings are 10. Aces can be 1 or 11.
- The player who is closer to, but not above 21 wins the hand.

** Remember if you want to have a different output statement, then go to another gameState ** 

flow of the game
- player draws
- dealer draws
- player draws
- dealer draws
- check if blackjack in either of the hands
- if have, then display the cards drawn and the winner
- else, ask player if they want to hit or stand
- after player hits finish/chooses stand,
- dealer to choose whether hit or stand
- then compare the score to choose a winner

* how to deal with ace? *

Implement basic working version first where ace is default value of 1

/*

						INITIAL STATE
- global var gameState = "INITIAL"
- global var playerDrawsArray and dealerDrawsArray
- global var playerScore and dealerScore
- initialise deck
- shuffle deck and assign it as shuffled
- draw two cards sequentially for player and dealer
for (var i = 0; i < 2; i++) {
	playerDrawsArray[i] = shuffled.pop();
	dealerDrawsArray[i] = shuffled.pop();
} 
- checkBlackjack function
var checkBlackjack = function (playerDraws, dealerDraws) {
	var blackjack = "";
	playerScore = playerDrawsArrays[0].rank + playerDrawsArrays[1].rank;
	update player to dealer in VS: playerScore = playerDrawsArrays[0].rank + playerDrawsArrays[1].rank;
	if (playerScore == 21 && dealerScore == 21) blackjack = "Both";
	else if (playerScore == 21) blackjack = "Player";
	else if (dealerScore == 21) blackjack = "Dealer";
	else blackjack = "Nil";
	return blackjack;
}
- blackjackResult = checkBlackjack (playerDrawsArrays, dealerDrawsArrays);
if bjresult = "Nil", output will need to display player's both cards, dealer's first card, player's scores, and ask whether want to hit or stand
gameState will change to what the input is -- do user validation
return output
else if bjresult = "Player", output will display the player's cards and say Blackjack. Press Submit to restart
else if bjresult = "Dealer", output will display the dealer's cards and say Blackjack. Press Submit to restart
else if bjresult = "Both", output will display both player and dealer's cards and say tied. Press Submit to restart

*/

- next up, need to look at the HIT and PASS states for player first
- then we need to deal with the dealer HIT and PASS
- then we deal with the ace 1 or 11 logic 
baby steps








